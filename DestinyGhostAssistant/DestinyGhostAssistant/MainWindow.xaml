<Window x:Class="DestinyGhostAssistant.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DestinyGhostAssistant"
        xmlns:vm="clr-namespace:DestinyGhostAssistant.ViewModels"
        xmlns:models="clr-namespace:DestinyGhostAssistant.Models"
        xmlns:utils="clr-namespace:DestinyGhostAssistant.Utils"
        mc:Ignorable="d"
        Title="Destiny Ghost Assistant" Height="600" Width="400">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <utils:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <utils:AssistantMessageVisibilityConverter x:Key="AssistantMessageVisibilityConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- New: For Menu -->
            <RowDefinition Height="Auto"/> <!-- For Logo/Header -->
            <RowDefinition Height="*"/>    <!-- For Chat History -->
            <RowDefinition Height="Auto"/> <!-- For Input Area -->
        </Grid.RowDefinitions>

        <!-- Menu Area -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="_New Chat" Command="{Binding NewChatCommand}" />
                <Separator />
                <MenuItem Header="_Save Chat..." Command="{Binding SaveChatCommand}" />
                <MenuItem Header="_Load Chat..." Command="{Binding LoadChatCommand}" />
                <Separator />
                <MenuItem Header="_Settings..." Command="{Binding OpenSettingsCommand}" />
                <Separator />
                <MenuItem Header="E_xit" x:Name="MenuExit" Click="MenuExit_Click" />
            </MenuItem>
            <!-- Add other top-level menus like "_Edit", "_View", "_Help" if desired -->
        </Menu>

        <!-- Logo Area -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10" Background="#FFF0F0F0">
            <Image Source="/Assets/GhostLogo.png" Width="40" Height="40" Margin="0,0,10,0" VerticalAlignment="Center"/>
            <TextBlock Text="Ghost Assistant" FontSize="20" VerticalAlignment="Center"/>
        </StackPanel>

        <!-- Chat History Area -->
        <ScrollViewer Grid.Row="2" x:Name="ChatScrollViewer" VerticalScrollBarVisibility="Auto" Margin="10,0,10,0" Padding="0,5">
            <ItemsControl ItemsSource="{Binding Messages}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:ChatMessage}">
                        <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="5" Padding="8" Margin="0,5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" /> <!-- Sender -->
                                    <RowDefinition Height="Auto" /> <!-- Message Text -->
                                    <RowDefinition Height="Auto" /> <!-- Timestamp and Copy Button row -->
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" FontWeight="Bold" Text="{Binding SenderDisplay}" Margin="0,0,0,2"/>

                                <TextBlock Grid.Row="1" Text="{Binding Text}" TextWrapping="Wrap" Margin="0,2,0,5" />

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" /> <!-- Timestamp will take available space -->
                                        <ColumnDefinition Width="Auto" /> <!-- Copy Button will size to content -->
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="{Binding Timestamp, StringFormat='hh:mm tt'}"
                                               FontSize="10" Opacity="0.7" HorizontalAlignment="Right" VerticalAlignment="Bottom" />

                                    <Button Grid.Column="1" Content="Copy" FontSize="10" Padding="5,2" Margin="5,0,0,0"
                                            VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                            Command="{Binding DataContext.CopyToClipboardCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            CommandParameter="{Binding Text}"
                                            Visibility="{Binding Sender, Converter={StaticResource AssistantMessageVisibilityConverter}}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- Input Area -->
        <Border Grid.Row="3" BorderThickness="0,1,0,0" BorderBrush="LightGray" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" x:Name="MessageInputTextBox" Margin="0,0,10,0" FontSize="14" VerticalContentAlignment="Center"
                         Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding Path=IsSendingMessage, Converter={StaticResource InverseBooleanConverter}}"
                         KeyDown="MessageInputTextBox_KeyDown">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding SendMessageCommand}" Key="Enter"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Grid.Column="1" Content="Send" Padding="15,8"
                        Command="{Binding SendMessageCommand}"
                        IsEnabled="{Binding Path=IsSendingMessage, Converter={StaticResource InverseBooleanConverter}}"/>
            </Grid>
        </Border>
    </Grid>
</Window>
